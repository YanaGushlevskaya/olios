/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,canvas,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:.35em .75em .625em}legend{display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}summary{display:list-item}[hidden],template{display:none}*,legend{-webkit-box-sizing:border-box;box-sizing:border-box}body,html{width:100%;min-height:100vh}body{font-size:14;font-size:.875rem;font-family:"Lato",sans-serif;color:#000;background:#f0f0f0}.content{-webkit-box-flex:1;-ms-flex:1 0;flex:1 0;padding-left:144px;min-height:100vh}h1,h2,h3,h4,h5,h6,p{margin-top:0}p{line-height:1.57;font-weight:300}@media screen and (max-width:768px){.content{padding-left:0}}.container{padding:0 40px;max-width:1570px;margin:0 auto}.page-offset{padding:140px 0}@media screen and (max-width:768px){.page-offset{padding:0 0 75px}}.reset-link{text-decoration:none}.reset-list{list-style:none}.main-aside{padding:30px 0 100px;background:#fff;width:144px;height:100vh;-webkit-box-shadow:0 0 25px rgba(219,219,219,.5);box-shadow:0 0 25px rgba(219,219,219,.5);overflow-y:auto;position:fixed;left:0;top:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}@media screen and (max-width:768px){.main-aside{bottom:0;top:auto;height:auto;width:100%;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row nowrap;flex-flow:row nowrap;padding:15px;overflow-x:auto;overflow-y:visible}}.main-aside__nav{margin-top:140px;-webkit-box-flex:1;-ms-flex:1 0;flex:1 0}@media screen and (max-width:768px){.main-aside__nav{margin-top:0;margin-left:30px}}.main-aside__nav-list{margin:0;padding:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:100%}@media screen and (max-width:768px){.main-aside__nav-list{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row nowrap;flex-flow:row nowrap}}.main-aside__nav-item:not(:last-child){margin-bottom:75px}@media screen and (max-width:768px){.main-aside__nav-item:not(:last-child){margin-bottom:0;margin-right:30px}}.main-aside__nav-item:last-child{margin-top:auto}@media screen and (max-width:768px){.main-aside__nav-item:last-child{margin-left:auto}}.main-aside__nav-link{font-size:25;font-size:1.5625rem;color:#d8d8d8;-webkit-transition:color .2s linear;transition:color .2s linear}.main-aside__nav-link:hover,.nav__link:hover .nav__title{color:#0023ff}.main-page{width:100%;height:100vh;background:url(../img/bg.png) center bottom no-repeat/cover}@media screen and (max-width:768px){.main-page{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}}.main-page__description{max-width:800px;text-align:center;margin:0 auto}.main-page__title{font-size:250;font-size:15.625rem;text-transform:uppercase;font-weight:100;line-height:1;margin-bottom:30px;letter-spacing:6px}@media screen and (max-width:1371px){.main-page__title{font-size:140;font-size:8.75rem}}.main-page__sub-title{font-size:41;font-size:2.5625rem;font-weight:300;letter-spacing:1px;margin-bottom:30px;text-transform:uppercase}@media screen and (max-width:1371px){.main-page__sub-title{font-size:25;font-size:1.5625rem}}.main-page__link{text-decoration:none;display:inline-block;text-transform:uppercase;background:#0023ff;line-height:1;font-weight:800;font-size:1.28rem;color:#fff;border:1px solid #0023ff;-webkit-transition:color .2s linear,background .2s linear;transition:color .2s linear,background .2s linear;padding:14px 50px;border-radius:35px}.main-page__link:hover{color:#0023ff;background:0 0}.nav{width:374px;height:100vh;overflow-y:auto;position:fixed;right:0;top:0;background:#fff;-webkit-box-shadow:0 0 25px rgba(219,219,219,.5);box-shadow:0 0 25px rgba(219,219,219,.5);padding:170px 70px 120px 20px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-transform:translateX(100%);transform:translateX(100%);-webkit-transition:-webkit-transform .2s linear;transition:transform .2s linear;transition:transform .2s linear,-webkit-transform .2s linear}.nav.active{-webkit-transform:translateX(0);transform:translateX(0)}.nav__list{margin:0;padding:0;width:100%}.nav__item:not(:last-child){margin-bottom:60px}.nav__link{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.nav-btn:hover,.nav__link--active,.search-page__result-link:hover .search-page__result-description{color:#0023ff}.nav__title{text-transform:uppercase;color:#c1c1c1;font-size:18;font-size:1.125rem;-webkit-transition:color .2s linear;transition:color .2s linear}.nav__icon{width:80px;margin-left:20px;display:-webkit-box;display:-ms-flexbox;display:flex}.nav__icon>img{display:block;margin:auto;max-width:100%}.nav-btn{width:87px;height:87px;background:#fff;border-radius:50%;-webkit-box-shadow:0 0 25px rgba(219,219,219,.5);box-shadow:0 0 25px rgba(219,219,219,.5);border:0;font-size:25;font-size:1.5625rem;cursor:pointer;padding:0;position:fixed;right:55px;top:75px;z-index:99;-webkit-transition:color .2s linear;transition:color .2s linear}@media screen and (max-width:887px){.nav-btn{right:30px;top:30px;width:50px;height:50px;font-size:20;font-size:1.25rem}}.products-page__header{padding-top:70px}.container--header-products{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.products-page__title{font-size:72;font-size:4.5rem;color:#000;text-transform:uppercase;font-weight:300;margin-bottom:0}.category{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.category__label{font-size:18;font-size:1.125rem;text-transform:uppercase;color:#c1c1c1;margin-right:35px}@media screen and (max-width:591px){.category__label{margin-right:10px;font-size:14;font-size:.875rem}}@media screen and (max-width:461px){.category__label{display:none}}.category__img{display:block;max-width:80px}@media screen and (max-width:591px){.category__img{max-width:30px}}.products{margin:70px 0 90px}@media screen and (max-width:461px){.products{margin-top:30px}}.products__list{margin:0 -20px;padding:0;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}@media screen and (max-width:1031px){.products__list{margin:0}}.products__item{margin:20px}@media screen and (max-width:1714px){.products__item{width:calc(50% - 40px)}}@media screen and (max-width:1031px){.products__item{width:100%;margin-left:0;margin-right:0}}.products__link{display:block;height:100%}.products__card,.products__card-sub-title,.products__card-title{margin:0}.products__card{background:#fff;height:100%}.products__card-title{text-transform:uppercase;font-weight:300;color:#000;letter-spacing:1px}.products__card-sub-title{color:#c1c1c1;font-weight:300}.products__card-price{color:#0023ff;font-weight:700;letter-spacing:1px}.products__card-img-container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;overflow:hidden}.products__card-img{display:block;max-width:100%}.products__card--small{width:340px;padding:25px 30px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.products__card--small .products__card-img-container{max-width:200px;height:195px;margin:0 auto}.products__card--small .products__card-description{margin-top:70px}.products__card--small .products__card-title{font-size:30;font-size:1.875rem}.products__card--small .products__card-sub-title{font-size:18;font-size:1.125rem;margin-bottom:10px}.products__card--small .products__card-price{font-size:18;font-size:1.125rem}.products__card--large,.products__card--medium{width:1110px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:70px 80px}.products__card--large .products__card-img-container{max-width:480px;height:279px;margin-right:90px}.products__card--large .products__card-description{-webkit-box-flex:1;-ms-flex:1 0;flex:1 0}.products__card--large .products__card-title{font-size:47;font-size:2.9375rem}.products__card--large .products__card-sub-title{font-size:28;font-size:1.75rem;margin-bottom:60px}.products__card--large .products__card-price{font-size:28;font-size:1.75rem}.products__card--medium{width:730px;padding:40px}.products__card--medium .products__card-img-container{max-width:350px;height:279px;margin-right:35px}.products__card--medium .products__card-description{-webkit-box-flex:1;-ms-flex:1 0;flex:1 0}.products__card--medium .products__card-title{font-size:30;font-size:1.875rem}.products__card--medium .products__card-sub-title{font-size:18;font-size:1.125rem;margin-bottom:10px}.products__card--medium .products__card-price{font-size:18;font-size:1.125rem}@media screen and (max-width:1714px){.products__card{width:100%;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:50px;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.products__card .products__card-img-container{margin:0 auto;max-width:350px;height:250px}.products__card .products__card-description{margin-top:0}.products__card .products__card-title{font-size:30;font-size:1.875rem}.products__card .products__card-sub-title{font-size:18;font-size:1.125rem;margin-bottom:10px}.products__card .products__card-price{font-size:18;font-size:1.125rem}}@media screen and (max-width:491px){.products__card{padding:20px}.products__card .products__card-title{font-size:20;font-size:1.25rem}.products__card .products__card-sub-title{font-size:14;font-size:.875rem;margin-bottom:10px}.products__card .products__card-price{font-size:14;font-size:.875rem}.products__card .products__card-img-container{height:auto}}.search-page{background:-webkit-gradient(linear,left top,left bottom,from(rgba(255,255,255,.9)),to(rgba(255,255,255,.9))),url(../../../../img/bg.png) center center no-repeat/cover;background:linear-gradient(to bottom,rgba(255,255,255,.9),rgba(255,255,255,.9)),url(../../../../img/bg.png) center center no-repeat/cover;min-height:100vh}.search-form{margin-bottom:75px}@media screen and (max-width:1931px){.search-form{margin-top:50px}}@media screen and (max-width:768px){.search-form{margin-top:0;padding-top:100px}}.search-form__item{position:relative}.search-form__clear{padding:0;border:0;background:0 0;cursor:pointer;position:absolute;right:10px;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);color:#e5e5e5;font-size:40px;-webkit-transition:color .2s linear;transition:color .2s linear}.search-form__clear:hover{color:#000}.search-form__textfield{font-size:140;font-size:8.75rem;width:100%;background:0 0;border:0;border-bottom:1px solid #e5e5e5;font-weight:100;color:#000;padding-right:50px}@media screen and (max-width:1371px){.search-form__textfield{font-size:70;font-size:4.375rem}}@media screen and (max-width:768px){.search-form__textfield{font-size:36;font-size:2.25rem}}.search-form__label{font-size:36;font-size:2.25rem;position:absolute;left:0;bottom:-70px;color:rgba(0,0,0,.3);font-weight:300;letter-spacing:1px}@media screen and (max-width:1371px){.search-form__label{font-size:18;font-size:1.125rem;bottom:-50px}}@media screen and (max-width:768px){.search-form__label{font-size:16;font-size:1rem}}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}.search-page__result-row{margin-top:150px;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.search-page__result-col{-webkit-box-flex:1;-ms-flex:1 0 50%;flex:1 0 50%}@media screen and (max-width:871px){.search-page__result-col{-webkit-box-flex:1;-ms-flex:1 0 100%;flex:1 0 100%}}.search-page__result-item{margin:0 0 15px}@media screen and (max-width:591px){.search-page__result-item{margin-bottom:35px}}.search-page__result-link{font-size:72;font-size:4.5rem;text-transform:uppercase;font-weight:300;color:#000;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-decoration:none;-webkit-transition:color .2s linear;transition:color .2s linear}@media screen and (max-width:1131px){.search-page__result-link{font-size:36;font-size:2.25rem}}@media screen and (max-width:591px){.search-page__result-link{font-size:26;font-size:1.625rem;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}}.search-page__result-img{display:block;max-width:150px}.search-page__result-description{margin-left:60px}@media screen and (max-width:591px){.search-page__result-description{margin-left:0}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
